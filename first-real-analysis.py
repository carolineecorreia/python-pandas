# -*- coding: utf-8 -*-
"""Tarefas_Carol_16_06_2020.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NAHBwm1t3LtIhFYRRQ00jkLLRX3CbOBx
"""

# User_type -> C ou c (contratante), P ou p (profissional)

############################## Tarefas ####################################

################ Análise 1 ######################
# a) Quantos NOVOS contratantes pagantes e RETORNANTES contratantes  temos por mês (desde sempre até Jun2020)
# b) NOVOS - Pagou o plano pela primeira vez na vida!
# c)RETORNANTES - já foi assinante,alguma vez no passado, cancelou, ficou algum tempo sem pagar (no mínimo 1 mês), e agora retornou.
# d) plotar um gráfico de (mês) X (novos, retornantes)

################ Análise 2 ######################
# Qual o valor faturado por NOVOS contratantes  e RETORNANTES contratantes por mês (desde sempre até Jun2020)
# plotar um gráfico de (mês) X (novos, retornantes)

#OBS
#Pode usar o que quiser! 
#RETORNANTES é diferente de RECORRENTE (retornante o cara não estava assinando mês passado e assinou neste mês),
#recorrente o cara era assinante o mês passado e renovou este mês.

import pandas as pd
import datetime
import numpy as np
import dateutil.parser
import matplotlib.pyplot as plt
from matplotlib.pyplot import *
from matplotlib.legend_handler import HandlerLine2D
import matplotlib as mpl

dateparse = lambda x: pd.datetime.strptime(x, '%Y-%m-%d')
pagamentos = pd.read_csv("Pagamentos-Simples-CC.csv",date_parser=dateparse)

#FATURAMENTO DAS PESSOAS QUE CONTRATARAM O PLANO PELA PRIMEIRA VEZ:

contratantes = pagamentos[(pagamentos['User_Type'] == 'c') | (pagamentos['User_Type'] == 'C')] #df com todos os contratantes

contratantes_novos = contratantes.drop_duplicates(subset='Email', keep='first',) #só os emails que aparecem apenas 1 vez
contratantes_novos.sort_values(by=['Year'])


#print("Quantidade de contratantes no total: %d" % len(contratantes))
#print("Quantidade de novos contratantes no total: %d" % len(contratantes_novos))

#print('\n')

i = 1
total_valor_ano = 0
soma_valor_mes = 0
valor_total_ano = []
vetor_anos = [2015,2016,2017,2018,2019,2020]

j = 2015

a = open("faturamento_primeira_vez.csv", "+w")

while j <= 2020:
  print("%d:" % j)
  a.write("%d:\n" % j)
  i = 1
  total_valor_ano = 0
  soma_valor_mes = 0
  while i <= 12:
    x = contratantes_novos[(contratantes_novos.Year == j) & (contratantes_novos.Month == i)]['Email']
    z = contratantes_novos[(contratantes_novos.Year == j) & (contratantes_novos.Month == i)]['Valor']
    w = z.tolist()
  
    for valor in w:
      soma_valor_mes = soma_valor_mes + valor

    a.write("Faturamento no mês %d: R$%d,00\n" % (i,soma_valor_mes))
    print("Faturamento no mês %d: R$%d,00" % (i,soma_valor_mes))
    total_valor_ano = total_valor_ano + soma_valor_mes
    i = i + 1
    t = 0
    soma_valor_mes = 0
    

  valor_total_ano.append(total_valor_ano)
  a.write("Faturamento total em %d: R$%d,00\n" % (j, total_valor_ano))
  print("Faturamento total em %d: R$%d,00\n" % (j, total_valor_ano))
  j = j + 1

a.close()

print(valor_total_ano)
print(vetor_anos)
print('\n')

plt.plot(vetor_anos, valor_total_ano, '-o', color='blue',
         markersize=6, linewidth = 2,
         markerfacecolor='white',
         markeredgecolor='black',
         markeredgewidth=1)
plt.ylabel('Faturamento')
plt.xlabel('Ano')
plt.grid(True)

#QUANTIDADE DE PESSOAS QUE CONTRATARAM O PLANO PELA PRIMEIRA VEZ:

contratantes = pagamentos[(pagamentos['User_Type'] == 'c') | (pagamentos['User_Type'] == 'C')] #df com todos os contratantes

contratantes_novos = contratantes.drop_duplicates(subset='Email', keep='first',) #só os emails que aparecem apenas 1 vez
contratantes_novos.sort_values(by=['Year'])

#print("Quantidade de contratantes no total: %d" % len(contratantes))
#print("Quantidade de novos contratantes no total: %d" % len(contratantes_novos))

#print('\n')

i = 1
t = 0
total_ano = 0

j = 2015

vetor_anos = [2015,2016,2017,2018,2019,2020]
novos_ano = []


f = open("primeira_vez_contratantes.csv","w+")

while j <= 2020:
  f.write("%d:\n" % j )
  i = 1
  t = 0
  total_ano = 0
  while i <= 12:
    x = contratantes_novos[(contratantes_novos.Year == j) & (contratantes_novos.Month == i)]['Email']
    y = x.tolist()
    t = t + len(y)

    f.write("Novos contratantes no mês %d: %d \n" % (i,t))
    
    #print("Novos contratantes no mês %d: %d" % (i,t))
    total_ano = total_ano + t
    i = i + 1
    t = 0
  
  f.write("Total de novos contratantes em %d: %d \n" % (j,total_ano))
  f.write('\n')
  #print("Total de novos contratantes em %d: %d \n" % (j, total_ano))
  novos_ano.append(total_ano)
  j = j + 1

f.close()

print(novos_ano)
print(vetor_anos)
print('\n')

grafico = plt.plot(vetor_anos, novos_ano, '-o', color='blue',
        markersize=6, linewidth = 2,
        markerfacecolor='white',
        markeredgecolor='black',
        markeredgewidth=1,
        )

plt.ylabel('Quantidade de novos contratantes')
plt.xlabel('Ano')
plt.grid(True)

#QUANTIDADE DE RETORNANTES (pessoas que não estavam assinando mês passado e assinaram neste mês) AINDA NÃO FINALIZADO!

contratantes = pagamentos[(pagamentos['User_Type'] == 'c') | (pagamentos['User_Type'] == 'C')] #df com todos os contratantes

i = 0
j = 0

lista_emails = [0,0,0,0,0]

while (j < 5):
  i = 0
  lista_emails[j] = []
  while i < 12:
    lista_emails[j].append([0])
    lista_emails[j][i] = 0
    x = contratantes[(contratantes.Year == j) & (contratantes.Month == i)]['Email']
    y = x.tolist()
    lista_emails[j][i] = y
    i = i + 1
  j = j + 1

#  for email in (lista_emails[i]):
#    if (i == 0):
#      if (lista_emails[i].count(email) == 1):
#        print(email)
#      else:
#          if (lista_emails[i-1].count(email) == 1):
#            print(email)

print(lista_emails[4])


   


#contratantes_novos = contratantes.drop_duplicates(subset='Email', keep='first',) #só os emails que aparecem apenas 1 vez
#contratantes_novos.sort_values(by=['Year'])

#GRÁFICO DA QUANTIDADE DE PESSOAS QUE CONTRATARAM O PLANO PELA PRIMEIRA VEZ

dateparse = lambda x: pd.datetime.strptime(x, '%Y-%m-%d')
pagamentos = pd.read_csv("Pagamentos-Simples-CC.csv",date_parser=dateparse)

contratantes = pagamentos[(pagamentos['User_Type'] == 'c') | (pagamentos['User_Type'] == 'C')] #df com todos os contratantes

contratantes_novos = contratantes.drop_duplicates(subset='Email', keep='first',) #só os emails que aparecem apenas 1 vez
contratantes_novos.sort_values(by=['Year'])

i = 1
t = 0
n = 0

j = 2016

vetor_meses = ['jan','fev','mar','abr','mai','jun','jul','ago','set','out','nov','dec']
matriz = [0,0,0,0,0]

while j <= 2020:
  i = 1
  t = 0
  novos_mes = []
  matriz[n] = []
  while i <= 12:
    t = 0
    x = contratantes_novos[(contratantes_novos.Year == j) & (contratantes_novos.Month == i)]['Email']
    y = x.tolist()
    t = t + len(y)

    novos_mes.append(t)
    i = i + 1

  matriz[n] = novos_mes

  j = j + 1
  n = n + 1

plt.plot(vetor_meses, matriz[0], 'r--', color='k',label = "2016")
plt.ylabel('Quantidade de novos contratantes')
plt.xlabel('Mês')
plt.grid(True)

plt.plot(vetor_meses, matriz[1], 'r--', color='c',label = "2017")
plt.plot(vetor_meses, matriz[2], 'r--', color='r',label = "2018")
plt.plot(vetor_meses, matriz[3], 'r--', color='b',label = "2019")
plt.plot(vetor_meses, matriz[4], 'r--', color='g',label = "2020")

plt.legend()
plt.title("Variação mensal do número de novos contratantes")

savefig("x" + str(x) + ".png", dpi=300, bbox_inches='tight')
